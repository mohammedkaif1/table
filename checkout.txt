import React, { useState } from 'react';
import {
  Table, TableBody, TableCell, TableContainer, TableHead, TableRow,
  Paper, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle,
  Button, Typography
} from '@mui/material';
import { styled } from '@mui/system';

const StyledTableRow = styled(TableRow)(({ theme }) => ({
  '&:nth-of-type(odd)': {
    backgroundColor: theme.palette.action.hover,
  },
  '&:hover': {
    backgroundColor: theme.palette.action.selected,
  },
  height: '60px', // Adjust row height
}));

const StyledButton = styled(Button)({
  backgroundColor: '#6f4c8e', // Custom button color
  color: '#ffffff',
  '&:hover': {
    backgroundColor: '#5a3b70',
  },
});

const employees = [
  { id: 103261, name: 'Sunil Kumar', sdm: 'Amarendra', duration: '12 Months', skills: 'Java Developer', experience: '20 months', location: 'Pune', status: 'ready for Deployable', category: 'Rotation Pool' },
  { id: 103950, name: 'Raj Girase', sdm: 'Gaurav', duration: '12 Months', skills: 'Spring Boot', experience: '15 months', location: 'Bangalore', status: 'Planned for a Project', category: 'Rotation Pool' },
  { id: 103265, name: 'Shubham Sourabh', sdm: 'Swati', duration: '12 Months', skills: 'Cloud Developer', experience: '10 months', location: 'Pune', status: 'Assigned as a contingent', category: 'Rotation Pool' },
  { id: 102717, name: 'Tejesh Gaikwad', sdm: 'Swati', duration: '12 Months', skills: 'React', experience: '10 months', location: 'Pune', status: 'Release From PD', category: 'Contingency List' },
  { id: 102485, name: 'Kunal Damare', sdm: 'Dinesh', duration: '12 Months', skills: 'Java Backend', experience: '24 months', location: 'Pune', status: 'Assigned as Billable', category: 'Contingency List' },
];

const EmployeePopup = () => {
  const [open, setOpen] = useState(true);
  const [selected, setSelected] = useState({});

  const handleCheckboxChange = (id) => {
    setSelected((prev) => ({ ...prev, [id]: !prev[id] }));
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <Dialog open={open} onClose={handleClose} maxWidth="md" fullWidth>
      <DialogTitle>Checkout for Hiring Employees</DialogTitle>
      <DialogContent>
        <TableContainer component={Paper}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>Emp ID</TableCell>
                <TableCell>Emp Name</TableCell>
                <TableCell>SDM</TableCell>
                <TableCell>Project Duration</TableCell>
                <TableCell>Skills</TableCell>
                <TableCell>Experience</TableCell>
                <TableCell>Location</TableCell>
                <TableCell>Contingency Status</TableCell>
                <TableCell>Category</TableCell>
                <TableCell>Remove</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {employees.map((emp) => (
                <StyledTableRow key={emp.id}>
                  <TableCell>{emp.id}</TableCell>
                  <TableCell>{emp.name}</TableCell>
                  <TableCell>{emp.sdm}</TableCell>
                  <TableCell>{emp.duration}</TableCell>
                  <TableCell>{emp.skills}</TableCell>
                  <TableCell>{emp.experience}</TableCell>
                  <TableCell>{emp.location}</TableCell>
                  <TableCell>{emp.status}</TableCell>
                  <TableCell>{emp.category}</TableCell>
                  <TableCell>
                    <Checkbox
                      checked={!!selected[emp.id]}
                      onChange={() => handleCheckboxChange(emp.id)}
                    />
                  </TableCell>
                </StyledTableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
        <Typography variant="body2" style={{ marginTop: '16px' }}>
          You have selected {Object.values(selected).filter(v => v).length} employees.
        </Typography>
      </DialogContent>
      <DialogActions>
        <Button onClick={handleClose} color="primary">
          Cancel
        </Button>
        <StyledButton onClick={handleClose}>
          Save
        </StyledButton>
      </DialogActions>
    </Dialog>
  );
};

export default EmployeePopup;
